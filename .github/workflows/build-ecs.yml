name: Build & Push to ECR

on:
  workflow_call:
    inputs:
      workflow-ref:
        type: string
        required: false
        default: master
        description: Branch, tag or commit used when calling the workflow. Required if calling the workflow from non default 'v1' tag.
    outputs:
      project-name:
        description: Project Name, defaults to GitHub repo name.
        value: ${{ jobs.build.outputs.project-name }}
      environment:
        description: Environment (staging/production/lab).
        value: ${{ jobs.build.outputs.environment }}
      build-number:
        description: Build Number/Tag
        value: ${{ jobs.build.outputs.build-number }}

jobs:
  build:
    name: Build Docker 
    environment: ${{ github.ref == 'refs/heads/master' && 'production' || github.ref == 'refs/heads/test' && 'test' }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    outputs:
      project-name: ${{ steps.env.outputs.project-name }}
      environment: ${{ steps.env.outputs.environment }}
      build-number: ${{ steps.build-number.outputs.build-number }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout Cru Actions & Workflows
        uses: actions/checkout@v3
        with:
          repository: Wycliffe-USA/mpdx-github-actions
          ref: ${{ inputs.workflow-ref }}
          path: github-actions

      - name: Setup Build environment
        uses: ./github-actions/actions/setup-env
        id: env

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-1
          #Uses arn of IAM role created by terraform in mpdx-terraform, aws_iam_role.github_deploy
          role-to-assume: ${{ vars.AWS_IAM_ROLE_GITHUB_DEPLOY_ARN }}

      - name: Increment Build Number
        run: echo "build-number=${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}" >> "$GITHUB_OUTPUT"
        id: build-number

      - name: Start Docker Network
        uses: ./github-actions/actions/docker-network
        with:
          name: ${{ steps.env.outputs.project-name }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          driver-opts: network=${{ steps.env.outputs.project-name }}

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v1
        id: ecr

      - name: Cache Docker Layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx

      - name: Import Build Secrets
        uses: ./github-actions/actions/secrets
        with:
          type: BUILD

      - name: Checkout Project
        uses: actions/checkout@v3
        with:
          path: project

      - name: Run build.sh
        working-directory: project
        run: ./build.sh
        env:
          SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
          SIDEKIQ_CREDS: ${{ secrets.SIDEKIQ_CREDS }}
          DOCKER_NETWORK: ${{ steps.env.outputs.project-name }}
          DOCKER_ARGS: |
            --builder ${{ steps.buildx.outputs.name }}
            --cache-from type=local,src=/tmp/.buildx-cache
            --cache-to type=local,dest=/tmp/.buildx-cache-new
            --tag ${{vars.AWS_ACCOUNT_NUMBER}}.dkr.ecr.${{vars.AWS_REGION}}.amazonaws.com/mpdx-${{ github.ref == 'refs/heads/master' && 'prod' || github.ref == 'refs/heads/test' && 'test' }}/api:${{steps.build-number.outputs.build-number}}
            --tag ${{vars.AWS_ACCOUNT_NUMBER}}.dkr.ecr.${{vars.AWS_REGION}}.amazonaws.com/mpdx-${{ github.ref == 'refs/heads/master' && 'prod' || github.ref == 'refs/heads/test' && 'test' }}/api:latest
            --push
 
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
        continue-on-error: true

      - name: Notify Success
        run: echo "::notice title=Build Success::Successfully built - $ENVIRONMENT-$BUILD_NUMBER"